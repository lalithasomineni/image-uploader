{
  "openapi": "3.0.0",
  "info": {
      "version": "1.0.0",
      "title": "Seans-TypeScript-NodeJS-CRUD-REST-API-Boilerplate",
      "description": "A minimal and easy to follow example of what you need to create a CRUD style API in NodeJs using TypeScript",
      "license": {
          "name": "MIT",
          "url": "https://opensource.org/licenses/MIT"
      }
  },
  "servers": [
      {
          "url": "/",
          "description": "Local Dev, or from Heroku"
      }
  ],
  "tags": [
      {
          "name": "Users",
          "description": "API for adding users"
      }
  ],
  "consumes": [
      "application/json"
  ],
  "produces": [
      "application/json"
  ],
  "paths": {
      "/api/users/register": {
          "post": {
              "tags": [
                  "Image uploader"
              ],
              "summary": "add user",
              "requestBody": {
                  "description": "User Object",
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/definitions/User"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/id"
                      }
                  }
              }
          }
      },
      "/api/users/login": {
          "post": {
              "tags": [
                  "login"
              ],
              "summary": "login",
              "requestBody": {
                  "description": "User Object",
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/definitions/User"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/User"
                      }
                  },
                  "404": {
                      "description": "Failed. Cat not found."
                  }
              }
          }
      },
      "/api/images": {
          "post": {
              "tags": [
                  "upload"
              ],
              "summary": "upload images",
              "consumes":
                         "multipart/form-data",
              "parameters": [
                  {
                      "in": "formData",
                      "name": "image",
                      "type": "file"
                  },
                  {
                     "in": "formData",
                     "name": "text",
                     "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Image"
                      }
                  },
                  "404": {
                      "description": "Failed. Cat not found."
                  }
              }
          }
      }
  },
  "securityDefinitions": {
  "Bearer": {
    "type": "apiKey",
    "name": "Authorization",
    "in": "header"
  }
  },
  "definitions": {
      "id": {
          "properties": {
              "uuid": {
                  "type": "string"
              }
          }
      },
      "User": {
          "type": "object",
          "properties": {
              "username": {
                  "type": "string"
              },
              "email": {
                  "type": "string"
              },
              "password": {
                  "type": "string"
              }
          }
      },
      "Image": {
          "type": "object",
          "properties": {
              "text": {
                  "type": "string"
              },
            "image":  {
              "type": "string"
            }
          }
      }
  }
}
